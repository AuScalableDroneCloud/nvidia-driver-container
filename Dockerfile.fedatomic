# Nvidia driver installer for Fedora Atomic
#based on https://gitlab.cern.ch/cloud-infrastructure/nvidia-driver-container

ARG FEDORA_VERSION=29

FROM fedora:${FEDORA_VERSION} as kmod_builder
LABEL maintainer="Owen Kaluza <owen.kaluza@monash.edu" \
      name="nvidia-driver-installer" \
      version="0.2" \
      atomic.type="system" \
      architecture="x86_64"

#Must be the exact kernel version used in the kubernetes cluster node images
ARG KERNEL_VERSION=5.1.20-200.fc29.x86_64
ARG NVIDIA_DRIVER_VERSION=367.134
#ARG SELinux_ENABLED

RUN dnf -y update

RUN dnf -y install curl git binutils cpp gcc koji bc make pkgconfig pciutils unzip \
      elfutils-libelf-devel openssl-devel module-init-tools patch && \
    dnf -y autoremove && \
    koji download-build --rpm --arch=x86_64 kernel-core-${KERNEL_VERSION} && \
    koji download-build --rpm --arch=x86_64 kernel-devel-${KERNEL_VERSION} && \
    koji download-build --rpm --arch=x86_64 kernel-modules-${KERNEL_VERSION} && \
    koji download-build --rpm --arch=x86_64 kernel-headers-${KERNEL_VERSION} && \
    dnf install -y kernel-core-${KERNEL_VERSION}.rpm \
      kernel-devel-${KERNEL_VERSION}.rpm \
      kernel-modules-${KERNEL_VERSION}.rpm \
      kernel-headers-${KERNEL_VERSION}.rpm && \
    dnf clean all

ENV NVIDIA_DRIVER_URL "http://us.download.nvidia.com/XFree86/Linux-x86_64/367.134/NVIDIA-Linux-x86_64-367.134.run"

ENV KERNEL_PATH /usr/src/kernels
ENV NVIDIA_PATH /opt/nvidia
ENV NVIDIA_BUILD_PATH ${NVIDIA_PATH}/build
ENV NVIDIA_DL_PATH ${NVIDIA_PATH}/download

# NVIDIA driver
WORKDIR ${NVIDIA_DL_PATH}
      
RUN curl ${NVIDIA_DRIVER_URL} -o nv_driver_installer.run && \
    chmod +x nv_driver_installer.run

#Try patching for newer kernel https://wiki.outscale.net/display/EN/Installing+an+NVIDIA+Driver+on+a+Linux+Instance
RUN ${NVIDIA_PATH}/download/nv_driver_installer.run -x && \
      cd ${NVIDIA_PATH}/download/NVIDIA-Linux-x86_64-367.134 && \
      echo "H4sIAL3q8V4AA81WbW/aMBD+vPwKT5UmKARIwnvVqRkxbdS8IBOo9smixLRZIUFOYJ3W/vedCbBIayntqDYL4sS+53KP/fgufjCZINkZLTgq8yhKys7QNExdtoJwcS/fN+u0XpW1eqOkaNXyHeMhm5bDZeAHI9nns8wt/JelMSovYl6O+Xgzs4HuwEiyLB/k5R/UitKSFVVWGkjR2lq9rSilyqahgrhKhULhLUGCb7UiV+qyqiJFaatau1YpaZpW05SG0lz7PjtDcq2lFlV42bo/O5PQUTBBPpsEIfNzzpAaxKa659pmh9qugfvYo/pQNy39i4XzEhJNmJhux7OogbsAGObSlaHnGCbsnks86gwv7T61se2Sr8UU9mdLaVCgQW/YjAazecQTGi7vZjGdsVnEfxQl+WmoiKHjOh5xLapblnv1IEYGjuV2LrGRL0qF53EZq918dMNYE+l+2YfEyPfX0U+u/23ktnlOdA9vt9C9cjDpX5i9fWjMghs+ShidRT6LWUKj7yHj8W0w38nJ1vseJg9/Qy/jIsv0iIU+iLR8jF7QJzou76/QQR9WpKd38NtUuohhTeajMXubUgl2DExevUK7YC8x92BoSE2n6+5HNaE+W9IgnET/AbfHEwlJKE5GSTCGji/GCRJh+jxYMg6B08zTKfop+QcrHbDpry4dK8whSsfK0TuVjo3v36VDbavNdq1VqmqKqirVViVTOhrVYgMVVldRNjaNs2TBQ4QJoT2P5OAxf5LOPsKOrXSzOTnR9Tc2hpMTcjZhnIVwdhbhNBrfQeX5BDsINvLn61HMwEPhCeB8kTwPQNJaweno7Sj0pwyUcJzeCQPBolqtCRppJ3hIyI9C1k7RkGVyAEcfT5EzsKw86Gir/H1YwPwm9pfiT023C5VdS+hODqjfORyK0u0rtZGCDqHg1NM7SXjrPKthDX6tUkXTVE1ptloZDddVsfmr6zOfPiJFDhwCubNHoLg43uqb5yi1QhmjLsE4R0WKzKeJCHLlShPrQVG2pjET+tkTPeGMbcCFvVEgqswbRaEUanqC2QW2epBeRdGkXdOy4JuG9j0y6Hj0Qu+LNN730tmObVCdnOelXzvAfRF/CwAA" | base64 --decode | gzip -d > nvidia-k2.patch && \
      patch -p3 < nvidia-k2.patch && \
      ./nvidia-installer -q -s -a -z \
      --accept-license \
      --no-questions \
      --ui=none \
      --no-precompiled-interface \
      --kernel-source-path=/lib/modules/${KERNEL_VERSION}/build \
      --kernel-name=${KERNEL_VERSION} \
      --no-nvidia-modprobe \
      --x-prefix=/usr \
      --no-install-compat32-libs \
      --installer-prefix=${NVIDIA_BUILD_PATH} \
      --utility-prefix=${NVIDIA_BUILD_PATH} \
      --opengl-prefix=${NVIDIA_BUILD_PATH} && \
      mv ${NVIDIA_BUILD_PATH}/lib ${NVIDIA_BUILD_PATH}/lib64
      #--force-selinux
      # NOTE: x-prefix is set to a different location,
      #   to simply skip those components and not include them in the installation

RUN mkdir -p ${NVIDIA_BUILD_PATH}/lib/modules/ && \
    cp -rf /lib/modules/${KERNEL_VERSION} ${NVIDIA_BUILD_PATH}/lib/modules/${KERNEL_VERSION}

###   DEPLOY   ###
FROM fedora:${FEDORA_VERSION}
LABEL maintainer="Owen Kaluza <owen.kaluza@monash.edu" \
      name="nvidia-driver-installer" \
      version="0.2" \
      atomic.type="system" \
      architecture="x86_64" 

ARG KERNEL_VERSION=5.1.20-200.fc29.x86_64
ARG NVIDIA_DRIVER_VERSION=367.134

RUN dnf -y update && \
    dnf -y install module-init-tools pciutils && \
    dnf -y autoremove && \
    dnf clean all

ENV NVIDIA_DRIVER_VERSION ${NVIDIA_DRIVER_VERSION}
ENV KERNEL_VERSION ${KERNEL_VERSION}

ENV NVIDIA_PATH /opt/nvidia
ENV NVIDIA_BIN_PATH ${NVIDIA_PATH}/bin
ENV NVIDIA_LIB_PATH ${NVIDIA_PATH}/lib
ENV NVIDIA_MODULES_PATH ${NVIDIA_LIB_PATH}/modules/${KERNEL_VERSION}/kernel/drivers/video

COPY --from=kmod_builder /opt/nvidia/build ${NVIDIA_PATH}
COPY scripts/nvidia-mkdevs.sh ${NVIDIA_BIN_PATH}/nvidia-mkdevs

RUN mkdir -p /lib/modules && \
    cp -rf ${NVIDIA_PATH}/lib/modules/${KERNEL_VERSION} /lib/modules/${KERNEL_VERSION}

ENV PATH $PATH:${NVIDIA_BIN_PATH}
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${NVIDIA_LIB_PATH}

CMD depmod -a && \
    modprobe -r nouveau && \
    modprobe nvidia && \
    modprobe nvidia-uvm && \
    nvidia-mkdevs && \
    cp -rfn ${NVIDIA_PATH}/bin /opt/nvidia-host && \
    cp -rfn ${NVIDIA_PATH}/lib64 /opt/nvidia-host
